{"version":3,"sources":["upload.js","app.js"],"names":["bytesToSize","bytes","sizes","i","parseInt","Math","floor","log","round","pow","element","tag","classes","content","node","document","createElement","length","classList","add","textContent","noop","upload","selector","options","files","onUpload","input","querySelector","preview","open","style","display","multi","setAttribute","accept","Array","isArray","join","insertAdjacentElement","triggerInput","click","changeHeandler","event","target","from","innerHTML","forEach","file","type","match","reader","FileReader","onload","ev","src","result","insertAdjacentHTML","name","size","readAsDataURL","removeHeandler","dataset","filter","block","closest","setTimeout","remove","clearPreview","el","bottom","uploadHeandler","querySelectorAll","e","previewInfo","addEventListener"],"mappings":";;ACAA;;AAEA,oBAAQ,OAAR,EAAiB;EACbiC,KAAK,EAAE,IADM;EAEbE,MAAM,EAAE,CAAC,MAAD,EAAS,MAAT,EAAiB,OAAjB,EAA0B,MAA1B,CAFK;EAGbT,QAHa,oBAGJD,KAHI,EAGG,CAEf;AALY,CAAjB;;;;;;;;;;;ADFA,SAASzB,WAAT,CAAqBC,KAArB,EAA4B;EACxB,IAAMC,KAAK,GAAG,CAAC,OAAD,EAAU,IAAV,EAAgB,IAAhB,EAAsB,IAAtB,EAA4B,IAA5B,CAAd;;EACA,IAAI,CAACD,KAAL,EAAY;IACT,OAAO,QAAP;EACF;;EACD,IAAME,CAAC,GAAGC,QAAQ,CAACC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,GAAL,CAASN,KAAT,IAAkBI,IAAI,CAACE,GAAL,CAAS,IAAT,CAA7B,CAAD,CAAlB;EACA,OAAOF,IAAI,CAACG,KAAL,CAAWP,KAAK,GAAGI,IAAI,CAACI,GAAL,CAAS,IAAT,EAAeN,CAAf,CAAnB,EAAsCA,CAAtC,IAA2C,GAA3C,GAAiDD,KAAK,CAACC,CAAD,CAA7D;AACH;;AAED,IAAMO,OAAO,GAAG,SAAVA,OAAU,CAACC,GAAD,EAA+B;EAAA,IAA1BC,OAA0B,uEAAhB,EAAgB;EAAA,IAAZC,OAAY;EAC3C,IAAMC,IAAI,GAAGC,QAAQ,CAACC,aAAT,CAAuBL,GAAvB,CAAb;;EAEA,IAAIC,OAAO,CAACK,MAAZ,EAAoB;IAAA;;IAChB,mBAAAH,IAAI,CAACI,SAAL,EAAeC,GAAf,2CAAsBP,OAAtB;EACH;;EAED,IAAIC,OAAJ,EAAa;IACTC,IAAI,CAACM,WAAL,GAAmBP,OAAnB;EACH;;EAED,OAAOC,IAAP;AAEH,CAbD;;AAeA,IAAMO,IAAI,GAAG,SAAPA,IAAO,GAAY,CAAE,CAA3B;;AAEO,SAASC,MAAT,CAAgBC,QAAhB,EAAwC;EAAA;;EAAA,IAAdC,OAAc,uEAAJ,EAAI;EAC3C,IAAIC,KAAK,GAAG,EAAZ;EACA,IAAMC,QAAQ,wBAAGF,OAAO,CAACE,QAAX,iEAAuBL,IAArC;EACA,IAAMM,KAAK,GAAGZ,QAAQ,CAACa,aAAT,CAAuBL,QAAvB,CAAd;EACA,IAAMM,OAAO,GAAGnB,OAAO,CAAC,KAAD,EAAQ,CAAC,SAAD,CAAR,CAAvB;EACA,IAAMoB,IAAI,GAAGpB,OAAO,CAAC,QAAD,EAAW,CAAC,KAAD,CAAX,EAAoB,SAApB,CAApB;EACA,IAAMY,MAAM,GAAGZ,OAAO,CAAC,QAAD,EAAW,CAAC,KAAD,EAAQ,SAAR,CAAX,EAA+B,WAA/B,CAAtB;EACAY,MAAM,CAACS,KAAP,CAAaC,OAAb,GAAuB,MAAvB;;EAGA,IAAGR,OAAO,CAACS,KAAX,EAAkB;IACdN,KAAK,CAACO,YAAN,CAAmB,UAAnB,EAA+B,IAA/B;EACH;;EAED,IAAGV,OAAO,CAACW,MAAR,IAAkBC,KAAK,CAACC,OAAN,CAAcb,OAAO,CAACW,MAAtB,CAArB,EAAoD;IAChDR,KAAK,CAACO,YAAN,CAAmB,QAAnB,EAA6BV,OAAO,CAACW,MAAR,CAAeG,IAAf,CAAoB,GAApB,CAA7B;EACH;;EAEDX,KAAK,CAACY,qBAAN,CAA4B,UAA5B,EAAwCV,OAAxC;EACAF,KAAK,CAACY,qBAAN,CAA4B,UAA5B,EAAwCjB,MAAxC;EACAK,KAAK,CAACY,qBAAN,CAA4B,UAA5B,EAAwCT,IAAxC;;EAEA,IAAMU,YAAY,GAAG,SAAfA,YAAe;IAAA,OAAMb,KAAK,CAACc,KAAN,EAAN;EAAA,CAArB;;EAEA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAAAC,KAAK,EAAI;IAC5B,IAAG,CAACA,KAAK,CAACC,MAAN,CAAanB,KAAb,CAAmBR,MAAvB,EAA+B;MAC3B;IACH;;IAEDQ,KAAK,GAAGW,KAAK,CAACS,IAAN,CAAWF,KAAK,CAACC,MAAN,CAAanB,KAAxB,CAAR;IACAI,OAAO,CAACiB,SAAR,GAAoB,EAApB;IACAxB,MAAM,CAACS,KAAP,CAAaC,OAAb,GAAuB,QAAvB;IAGAP,KAAK,CAACsB,OAAN,CAAc,UAAAC,IAAI,EAAI;MAClB,IAAI,CAACA,IAAI,CAACC,IAAL,CAAUC,KAAV,CAAiB,OAAjB,CAAL,EAAgC;QAC5B;MACH;;MAED,IAAMC,MAAM,GAAG,IAAIC,UAAJ,EAAf;;MAEAD,MAAM,CAACE,MAAP,GAAgB,UAAAC,EAAE,EAAI;QAClB,IAAMC,GAAG,GAAGD,EAAE,CAACV,MAAH,CAAUY,MAAtB;QACA3B,OAAO,CAAC4B,kBAAR,CAA2B,YAA3B,iHAEwCT,IAAI,CAACU,IAF7C,0DAGYH,GAHZ,sBAGyBP,IAAI,CAACU,IAH9B,yFAKQV,IAAI,CAACU,IALb,sCAME1D,WAAW,CAACgD,IAAI,CAACW,IAAN,CANb;MAWH,CAbD;;MAeAR,MAAM,CAACS,aAAP,CAAqBZ,IAArB;IACH,CAvBD;EAwBH,CAlCD;;EAoCA,IAAMa,cAAc,GAAG,SAAjBA,cAAiB,CAAAlB,KAAK,EAAI;IAC5B,IAAG,CAACA,KAAK,CAACC,MAAN,CAAakB,OAAb,CAAqBJ,IAAzB,EAA+B;MAC3B;IACH;;IAED,IAAOA,IAAP,GAAef,KAAK,CAACC,MAAN,CAAakB,OAA5B,CAAOJ,IAAP;IACAjC,KAAK,GAAGA,KAAK,CAACsC,MAAN,CAAa,UAAAf,IAAI;MAAA,OAAIA,IAAI,CAACU,IAAL,KAAcA,IAAlB;IAAA,CAAjB,CAAR;;IAEA,IAAG,CAACjC,KAAK,CAACR,MAAV,EAAkB;MACdK,MAAM,CAACS,KAAP,CAAaC,OAAb,GAAuB,MAAvB;IACH;;IAED,IAAMgC,KAAK,GAAGnC,OAAO,CACpBD,aADa,wBACgB8B,IADhB,UAEbO,OAFa,CAEL,eAFK,CAAd;IAIAD,KAAK,CAAC9C,SAAN,CAAgBC,GAAhB,CAAoB,UAApB;IACA+C,UAAU,CAAE;MAAA,OAAMF,KAAK,CAACG,MAAN,EAAN;IAAA,CAAF,EAAwB,GAAxB,CAAV;EACH,CAlBD;;EAoBA,IAAMC,YAAY,GAAG,SAAfA,YAAe,CAAAC,EAAE,EAAI;IACvBA,EAAE,CAACtC,KAAH,CAASuC,MAAT,GAAkB,KAAlB;IACAD,EAAE,CAACvB,SAAH,GAAe,4CAAf;EACH,CAHD;;EAKA,IAAMyB,cAAc,GAAG,SAAjBA,cAAiB,GAAM;IACzB1C,OAAO,CAAC2C,gBAAR,CAAyB,kBAAzB,EAA6CzB,OAA7C,CACI,UAAA0B,CAAC;MAAA,OAAIA,CAAC,CAACN,MAAF,EAAJ;IAAA,CADL;IAEI,IAAMO,WAAW,GAAG7C,OAAO,CAAC2C,gBAAR,CAAyB,gBAAzB,CAApB;IACAE,WAAW,CAAC3B,OAAZ,CAAoBqB,YAApB;IACA1C,QAAQ,CAACD,KAAD,CAAR;EACP,CAND;;EASAK,IAAI,CAAC6C,gBAAL,CAAsB,OAAtB,EAA+BnC,YAA/B;EACAb,KAAK,CAACgD,gBAAN,CAAuB,QAAvB,EAAiCjC,cAAjC;EACAb,OAAO,CAAC8C,gBAAR,CAAyB,OAAzB,EAAkCd,cAAlC;EACAvC,MAAM,CAACqD,gBAAP,CAAwB,OAAxB,EAAiCJ,cAAjC;AACH","file":"app.c328ef1a.js","sourceRoot":"..","sourcesContent":["function bytesToSize(bytes) {\r\n    const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB']\r\n    if (!bytes) {\r\n       return '0 Byte' \r\n    } \r\n    const i = parseInt(Math.floor(Math.log(bytes) / Math.log(1024)))\r\n    return Math.round(bytes / Math.pow(1024, i), i) + ' ' + sizes[i]\r\n}\r\n\r\nconst element = (tag,classes = [], content) => {\r\n    const node = document.createElement(tag)\r\n\r\n    if (classes.length) {\r\n        node.classList.add(...classes)\r\n    }\r\n\r\n    if (content) {\r\n        node.textContent = content\r\n    }\r\n\r\n    return node\r\n    \r\n}\r\n\r\nconst noop = function () {}\r\n\r\nexport function upload(selector, options = {}) {\r\n    let files = []\r\n    const onUpload = options.onUpload ?? noop\r\n    const input = document.querySelector(selector)\r\n    const preview = element('div', ['preview'])\r\n    const open = element('button', ['btn'], 'Открыть')\r\n    const upload = element('button', ['btn', 'primary'], 'Загрузить')\r\n    upload.style.display = 'none'\r\n\r\n\r\n    if(options.multi) {\r\n        input.setAttribute('multiple', true)\r\n    }\r\n\r\n    if(options.accept && Array.isArray(options.accept)) {\r\n        input.setAttribute('accept', options.accept.join(','))\r\n    }\r\n\r\n    input.insertAdjacentElement('afterend', preview)\r\n    input.insertAdjacentElement('afterend', upload)\r\n    input.insertAdjacentElement('afterend', open)\r\n\r\n    const triggerInput = () => input.click()\r\n\r\n    const changeHeandler = event => {\r\n        if(!event.target.files.length) {\r\n            return\r\n        }\r\n\r\n        files = Array.from(event.target.files)\r\n        preview.innerHTML = ''\r\n        upload.style.display = 'inline'\r\n\r\n\r\n        files.forEach(file => {\r\n            if (!file.type.match( 'image')) {\r\n                return\r\n            }\r\n\r\n            const reader = new FileReader()\r\n\r\n            reader.onload = ev => {\r\n                const src = ev.target.result\r\n                preview.insertAdjacentHTML('afterbegin', `\r\n            <div class=\"preview__img\">\r\n              <div class=\"preview__remove\" data-name=\"${file.name}\">&times;</div>\r\n                <img src=\"${src}\" alt=\"${file.name}\" />\r\n                <div class=\"preview__info\">\r\n                <span>${file.name}</span>\r\n                ${bytesToSize(file.size)}\r\n              </div>\r\n            </div>\r\n            `)\r\n\r\n            }\r\n\r\n            reader.readAsDataURL(file)\r\n        });\r\n    }\r\n\r\n    const removeHeandler = event => {\r\n        if(!event.target.dataset.name) {\r\n            return\r\n        }\r\n\r\n        const {name} = event.target.dataset\r\n        files = files.filter(file => file.name !== name)\r\n\r\n        if(!files.length) {\r\n            upload.style.display = 'none'\r\n        }\r\n\r\n        const block = preview\r\n        .querySelector(`[data-name=\"${name}\"]`)\r\n        .closest('.preview__img')\r\n\r\n        block.classList.add('removing')\r\n        setTimeout( () => block.remove(), 300)\r\n    }\r\n\r\n    const clearPreview = el => {\r\n        el.style.bottom = '4px'\r\n        el.innerHTML = '<div class=\"preview__info__progress\"</div>'\r\n    }\r\n\r\n    const uploadHeandler = () => {\r\n        preview.querySelectorAll('.preview__remove').forEach(\r\n            e => e.remove())\r\n            const previewInfo = preview.querySelectorAll('.preview__info')\r\n            previewInfo.forEach(clearPreview)\r\n            onUpload(files)\r\n    }\r\n\r\n\r\n    open.addEventListener('click', triggerInput)\r\n    input.addEventListener('change', changeHeandler)\r\n    preview.addEventListener('click', removeHeandler)\r\n    upload.addEventListener('click', uploadHeandler)\r\n}","import {upload} from './upload.js'\r\n\r\nupload( '#file', {\r\n    multi: true,\r\n    accept: ['.png', '.jpg', '.jpeg', '.gif'],\r\n    onUpload(files) {\r\n        \r\n    }\r\n})"]}